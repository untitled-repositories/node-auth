#!/usr/bin/env node

var config = require('../config/config');
var app = require('../app');
var http = require('http');
var socket = require('../routes/socket.js');
var jwtSecret = config.secret;
var socketioJwt = require("socketio-jwt");

var log = require('../logger');

var port = config.port;
app.set('port', port);

var server = http.createServer(app);

server.listen(port);
server.on('error', onError);
server.on('listening', onListening);

var io = require('socket.io')(server);
io.use(socketioJwt.authorize({
    secret: jwtSecret,
    handshake: true
}));

io.sockets.on('connection', socket);


function onError(error) {
    if (error.syscall !== 'listen') {
        throw error;
    }

    // handle specific listen errors with friendly messages
    switch (error.code) {
        case 'EACCES':
            console.error('Port ' + port + ' requires elevated privileges');
            process.exit(1);
            break;
        case 'EADDRINUSE':
            console.error('Port ' + port + ' is already in use');
            process.exit(1);
            break;
        default:
            throw error;
    }
}

function onListening() {
    log.info('App process started');
}
